package logger

import (
    "fmt"
    "strings"
    "testing"

    "github.com/stretchr/testify/assert"
)

const logForwarderMsg1 = `
["{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-05T20:56:30Z\\\" level=info msg=\\\"Launch Api Command.\\\" file=conductor.go package=main\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-05T20:56:30Z\\\" level=info msg=\\\"Starting Conductor Service.\\\" file=service.go package=api struct=Service\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-05T20:56:30Z\\\" level=info msg=\\\"BUDO HTTP Server port: [9000]\\\" file=config.go package=api struct=Config\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-05T20:56:30Z\\\" level=info msg=\\\"System model listening on: [http://system-model.daisho.svc.cluster.local:8800]\\\" file=config.go package=api struct=Config\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-05T20:56:30Z\\\" level=info msg=\\\"Setting conductor application routes\\\" package=apps.handler\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-05T20:56:30Z\\\" level=info msg=\\\"Ready to serve HTTP\\\" file=service.go package=api struct=Service\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-05T20:56:30Z\\\" level=info msg=\\\", POST : /api/v0/app/{networkId}/deploy\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-05T20:56:30Z\\\" level=info msg=\\\", GET : /api/v0/app/{networkId}/{instanceId}/undeploy\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-05T20:56:30Z\\\" level=info msg=\\\", GET : /ping\\\"\\n\"}"]
`

const logForwarderMsg2 = `
["{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] proxy_listen = \\\"0.0.0.0:8000\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] proxy_listen_ssl = \\\"0.0.0.0:8443\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] real_ip_header = \\\"X-Real-IP\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] real_ip_recursive = \\\"off\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] server_tokens = true\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] ssl = true\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] ssl_cipher_suite = \\\"modern\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] ssl_ciphers = \\\"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] trusted_ips = {}\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [debug] upstream_keepalive = 60\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [verbose] prefix in use: /usr/local/kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [verbose] preparing nginx prefix directory at /usr/local/kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [info] prefix directory /usr/local/kong not found, trying to create it\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [verbose] SSL enabled, no custom certificate set: using default certificate\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:20 [verbose] generating default SSL certificate and key\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:21 [verbose] Admin SSL enabled, no custom certificate set: using default certificate\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:21 [verbose] generating admin SSL certificate and key\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:21 [verbose] running datastore migrations\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:21 [info] migrating core for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:21 [info] core migrated up to: 2015-01-12-175310_skeleton\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2015-01-12-175310_init_schema\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2015-11-23-817313_nodes\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2016-02-29-142793_ttls\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2016-09-05-212515_retries\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2016-09-16-141423_upstreams\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2016-12-14-172100_move_ssl_certs_to_core\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2016-11-11-151900_new_apis_router_1\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2016-11-11-151900_new_apis_router_2\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2016-11-11-151900_new_apis_router_3\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2016-01-25-103600_unique_custom_id\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-01-24-132600_upstream_timeouts\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-01-24-132600_upstream_timeouts_2\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-03-27-132300_anonymous\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-04-18-153000_unique_plugins_id\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-04-18-153000_unique_plugins_id_2\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-05-19-180200_cluster_events\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-05-19-173100_remove_nodes_table\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-06-16-283123_ttl_indexes\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-07-28-225000_balancer_orderlist_remove\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:22 [info] core migrated up to: 2017-10-02-173400_apis_created_at_ms_precision\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] core migrated up to: 2017-11-07-192000_upstream_healthchecks\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] core migrated up to: 2017-10-27-134100_consistent_hashing_1\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] core migrated up to: 2017-11-07-192100_upstream_healthchecks_2\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] core migrated up to: 2017-10-27-134100_consistent_hashing_2\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating response-transformer for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] response-transformer migrated up to: 2016-05-04-160000_resp_trans_schema_changes\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating ip-restriction for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] ip-restriction migrated up to: 2016-05-24-remove-cache\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating statsd for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] statsd migrated up to: 2017-06-09-160000_statsd_schema_changes\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating jwt for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] jwt migrated up to: 2015-06-09-jwt-auth\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] jwt migrated up to: 2016-03-07-jwt-alg\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] jwt migrated up to: 2017-05-22-jwt_secret_not_unique\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] jwt migrated up to: 2017-07-31-120200_jwt-auth_preflight_default\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] jwt migrated up to: 2017-10-25-211200_jwt_cookie_names_default\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating cors for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] cors migrated up to: 2017-03-14_multiple_orgins\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating basic-auth for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] basic-auth migrated up to: 2015-08-03-132400_init_basicauth\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] basic-auth migrated up to: 2017-01-25-180400_unique_username\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating key-auth for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] key-auth migrated up to: 2015-07-31-172400_init_keyauth\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] key-auth migrated up to: 2017-07-31-120200_key-auth_preflight_default\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating ldap-auth for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] ldap-auth migrated up to: 2017-10-23-150900_header_type_default\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating hmac-auth for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] hmac-auth migrated up to: 2015-09-16-132400_init_hmacauth\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] hmac-auth migrated up to: 2017-06-21-132400_init_hmacauth\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating datadog for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] datadog migrated up to: 2017-06-09-160000_datadog_schema_changes\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating tcp-log for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] tcp-log migrated up to: 2017-12-13-120000_tcp-log_tls\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating acl for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] acl migrated up to: 2015-08-25-841841_init_acl\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating galileo for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] galileo migrated up to: 2016-04-15_galileo-import-mashape-analytics\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:23 [info] migrating response-ratelimiting for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] response-ratelimiting migrated up to: 2015-08-03-132400_init_response_ratelimiting\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] response-ratelimiting migrated up to: 2016-08-04-321512_response-rate-limiting_policies\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] migrating request-transformer for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] request-transformer migrated up to: 2016-05-04-160000_req_trans_schema_changes\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] migrating rate-limiting for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] rate-limiting migrated up to: 2015-08-03-132400_init_ratelimiting\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] rate-limiting migrated up to: 2016-07-25-471385_ratelimiting_policies\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] migrating oauth2 for database kong\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] oauth2 migrated up to: 2015-08-03-132400_init_oauth2\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] oauth2 migrated up to: 2016-07-15-oauth2_code_credential_id\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] oauth2 migrated up to: 2016-12-22-283949_serialize_redirect_uri\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] oauth2 migrated up to: 2016-09-19-oauth2_api_id\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] oauth2 migrated up to: 2016-12-15-set_global_credentials\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] oauth2 migrated up to: 2017-04-24-oauth2_client_secret_not_unique\\n\"}","{\"type\":\"data\",\"payload\":\"2018/02/05 20:59:24 [info] oauth2 migrated up to: 2017-10-19-set_auth_header_name_default\\n\"}","{\"type\":\"data\",\"payload\":\"2018-02-05 20:59:25 INFO  remote_syslog.go:199 Forwarding file: /var/log/containers/kong-2810749480-xps27_daisho_kong-1e81c4aa6f869d4cf5bb008814a73a58a3a7aee76916ee7e3cdc8266baa81543.log\\n\"}","{\"type\":\"data\",\"payload\":\"[2018-02-06T09:05:04Z] Incoming HTTP/1.1 GET /api/v1/pod/daisho/kong-2810749480-xps27/container request from 10.244.32.1:63436\\n\"}","{\"type\":\"data\",\"payload\":\"[2018-02-06T09:05:04Z] Incoming HTTP/1.1 GET /api/v1/pod/daisho/kong-2810749480-xps27/log request from 10.244.32.1:63435\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-06T11:53:39Z\\\" level=info msg=\\\"active filter: {[] [] [] kong-2810749480-xps27} (kong-2810749480-xps27)\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-06T11:53:39Z\\\" level=info msg=\\\"tailing pipeline: [[grep --line-buffered --extended-regexp kong-2810749480-xps27 /var/log/messages.0 /var/log/messages],[tail --lines 100]]\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-06T11:54:09Z\\\" level=info msg=\\\"active filter: {[] [] [] kong-2810749480-xps27} (kong-2810749480-xps27)\\\"\\n\"}","{\"type\":\"data\",\"payload\":\"time=\\\"2018-02-06T11:54:09Z\\\" level=info msg=\\\"tailing pipeline: [[grep --line-buffered --extended-regexp kong-2810749480-xps27 /var/log/messages.0 /var/log/messages],[tail --lines 100]]\\\"\\n\"}"]
`

func TestParseMsg1(t *testing.T) {
    result, err := ParseLogResponse(logForwarderMsg1)
    assert.Nil(t, err, "expecting parsing")
    assert.NotNil(t, result, "expecting result")
    entries := result.ToLogEntries()
    fmt.Println(strings.Join(entries.Entries, ""))
}

func TestParseMsg2(t *testing.T) {
    result, err := ParseLogResponse(logForwarderMsg2)
    assert.Nil(t, err, "expecting parsing")
    assert.NotNil(t, result, "expecting result")
    entries := result.ToLogEntries()
    fmt.Println(strings.Join(entries.Entries, ""))
}